"use strict";

var _jsdom = require("jsdom");

var _jsdom2 = _interopRequireDefault(_jsdom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// set globals for mocha that make access to document and window feel
// natural in the test environment
global.document = _jsdom2.default.jsdom("<!doctype html><html><body></body></html>"); /*
                                                                                       * Copyright (c) <%= info.year %>, <%- info.copyrightHolder %>
                                                                                       *
                                                                                       * License: MIT
                                                                                       */

global.window = global.document.defaultView;
global.self = global;

/**
 * Take all the properties of the window object and attach them to the mocha
 * global object. This is to prevent 'undefined' errors which sometime occur.
 * Gotten from: http://jaketrent.com/post/testing-react-with-jsdom/
 * @param  {object} window: The fake window, build by jsdom
 */
(function (window) {
  for (var key in window) {
    if (!window.hasOwnProperty(key)) {
      continue;
    }

    if (key in global) {
      continue;
    }

    global[key] = window[key];
  }
})(global.window);